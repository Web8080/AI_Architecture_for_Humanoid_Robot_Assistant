# ==============================================================================
# Humanoid Robot Assistant - Core Dependencies
# ==============================================================================

# Deep Learning Frameworks
torch>=2.1.0
torchvision>=0.16.0
tensorflow>=2.15.0  # Optional, for some legacy models

# NVIDIA Acceleration
nvidia-cudnn-cu12>=8.9.0
nvidia-tensorrt>=8.6.0
onnx>=1.15.0
onnxruntime-gpu>=1.16.0  # Use onnxruntime for CPU-only

# Transformers & NLP
transformers>=4.35.0
sentence-transformers>=2.2.2
tokenizers>=0.15.0
datasets>=2.14.0
huggingface-hub>=0.19.0

# NLP Libraries
spacy>=3.7.0
nltk>=3.8.1
python-dateutil>=2.8.2

# Speech
openai-whisper>=20231117  # ASR
TTS>=0.20.0  # Text-to-Speech (Coqui TTS)

# Computer Vision
opencv-python>=4.8.1
opencv-contrib-python>=4.8.1
Pillow>=10.1.0
scikit-image>=0.22.0
albumentations>=1.3.1  # Data augmentation

# YOLO & Detection
ultralytics>=8.0.200  # YOLOv8
detectron2 @ git+https://github.com/facebookresearch/detectron2.git

# Depth & SLAM
open3d>=0.17.0
pyrealsense2>=2.54.0  # Intel RealSense SDK

# Robotics
# Note: ROS2 dependencies should be installed via rosdep
rclpy  # ROS2 Python client (install via ROS2)
# geometry_msgs, sensor_msgs, etc. installed with ROS2

# Vector Databases & Search
faiss-gpu>=1.7.4  # or faiss-cpu for CPU-only
pymilvus>=2.3.0  # Milvus client
chromadb>=0.4.15  # Alternative vector DB

# Data Management & MLOps
mlflow>=2.8.0
dvc>=3.30.0
wandb>=0.16.0  # Weights & Biases
tensorboard>=2.15.0

# API & Web
fastapi>=0.104.0
uvicorn>=0.24.0
pydantic>=2.5.0
python-multipart>=0.0.6
websockets>=12.0

# gRPC
grpcio>=1.59.0
grpcio-tools>=1.59.0
protobuf>=4.25.0

# Databases
pymongo>=4.5.0
redis>=5.0.0
psycopg2-binary>=2.9.9  # PostgreSQL

# Cloud & Deployment
boto3>=1.29.0  # AWS SDK
google-cloud-storage>=2.10.0  # GCP
azure-storage-blob>=12.19.0  # Azure
kubernetes>=28.1.0
docker>=6.1.0

# Monitoring & Logging
prometheus-client>=0.19.0
sentry-sdk>=1.38.0
python-json-logger>=2.0.7

# Utilities
numpy>=1.24.0
scipy>=1.11.0
pandas>=2.1.0
pyyaml>=6.0.1
python-dotenv>=1.0.0
tqdm>=4.66.0
loguru>=0.7.2
requests>=2.31.0
httpx>=0.25.0

# Testing
pytest>=7.4.0
pytest-asyncio>=0.21.0
pytest-cov>=4.1.0
pytest-mock>=3.12.0
hypothesis>=6.92.0

# Code Quality
black>=23.11.0
flake8>=6.1.0
mypy>=1.7.0
isort>=5.12.0
pylint>=3.0.0
pre-commit>=3.5.0

# Jupyter & Notebooks
jupyter>=1.0.0
jupyterlab>=4.0.0
ipywidgets>=8.1.0
matplotlib>=3.8.0
seaborn>=0.13.0
plotly>=5.18.0

# Multimodal Models
timm>=0.9.10  # PyTorch Image Models
einops>=0.7.0
clip @ git+https://github.com/openai/CLIP.git

# Quantization & Optimization
optimum>=1.14.0
auto-gptq>=0.5.0
bitsandbytes>=0.41.0

# Reinforcement Learning (optional)
stable-baselines3>=2.2.0
gymnasium>=0.29.0

# Simulation (for development)
# Note: NVIDIA Isaac Sim has separate installation
pybullet>=3.2.5
mujoco>=3.0.0

# ==============================================================================
# Platform-Specific Notes:
# ==============================================================================
#
# For NVIDIA Jetson Orin:
#   - Install JetPack 5.1+ which includes CUDA, cuDNN, TensorRT
#   - Use PyTorch for Jetson from https://forums.developer.nvidia.com/
#   - Some packages may need ARM64 wheels
#
# For Cloud Training (x86_64 + NVIDIA GPUs):
#   - Standard pip install should work
#   - Ensure CUDA 11.8+ or 12.x is installed
#
# For CPU-only development:
#   - Replace *-gpu packages with *-cpu versions
#   - Remove CUDA/TensorRT dependencies
#
# ==============================================================================

